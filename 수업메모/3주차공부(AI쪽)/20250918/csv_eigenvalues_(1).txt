csv 데이터 수집? 그런거

<eigenvalue 실습용 설치>
pip install matplotlib

<수집한 데이터>
SOCR_HeightWeight.csv

<실습파일>
eigen_prac.py

<결과>
[[  3.61638215  11.15102917]
 [ 11.15102917 135.97653199]] 라는 데이터가 있을 경우,
 3.61638215 보다 135.97653199의 데이터가 더 다양하다 볼 수 있다.
 3.61638215(키)
135.97653199(몸무게) 이므로
몸무게가 키에 비해 더욱 다양한 데이터

<그래프 읽기>

군집이 타원형으로 기울여져 있는 형태일 경우, 
방향=고유벡터
분산= 고윳값
갱신=고윳값
긴 방향(타원의 긴 지름)=다양성이 큼
작은 방향(타원의 작은 지름)=다양성이 작음
분산이 크다= 정보가 많다<- 이것을 알려주는 것: 고유벡터

가중치=(0,0)에서 기울어진 정도. 선의 모양이 y=a*x일 경우, x가 가중치가 더 높다. 반면 y=x일땐 가중치가 같다.  y=a/x일 경우 y 가중치가 더 높다.


결론: 그래프가 알려주는 것: 고유벡터, 고윳값, 가중치 등 다양하게 알려준다.

<데이터 처리 및 결론내기의 흐름>
내적 => 행렬=> 뭔가...공분산 구하기?=> 고유벡터

<그래프에서 고유값 및 고유벡터 뽑는 법>
결과값:
   키                몸무게
[  2.68350923 136.90940491] // eigen_values
[[-0.99651893 -0.08336679]  //eigen_vectors 
 [ 0.08336679 -0.99651893]]

일때, 0.08336679 -0.99651893를 비교할때 가중치는 절댓값으로 봄.
이때, 방향성을 보기 위해선 [-0.99651893 -0.08336679],  [ 0.08336679 -0.99651893]로 보지 않고(가로방향 x)
[-0.99651893] [ 0.08336679] , [-0.08336679] [-0.99651893]으로 본다(세로 방향 o)

이렇게 나온 데이터로
숫자: 가중치(특성의 개수=가중치 개수)
방향: 고유벡터


내적, 벡터,행렬, 공분산 후 <eigenvalue 할때, 여러개의 차원을 무조건적으로 2차원으로 줄이는 작업을 한다.(2차원이 가장 보기 쉽기 떄문)

그후 주성분 구성(pcn)을 한다.





 